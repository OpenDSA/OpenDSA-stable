{
  "title": "Recursion Tutor",
  "build_dir": "Books",
  "code_dir": "SourceCode/",
  "code_lang": {
    "Java": {
      "ext": [
        "java"
      ],
      "label": "Java",
      "lang": "java"
    },
    "Pseudo": {
      "ext":[
        "txt"
      ],
      "label":"Pseudo",
      "lang":"java"
    }
  },
  "lang": "en",
  "module_origin": "http://algoviz.org",
  "exercise_server": "https://opendsa.cs.vt.edu",
  "logging_server": "https://opendsa.cs.vt.edu",
  "score_server": "https://opendsa.cs.vt.edu",
  "build_JSAV": false,
  "allow_anonymous_credit": true,
  "suppress_todo": false,
  "glob_exer_options": {
    "JXOP-debug": "true"
  },
  "chapters": {
    "Recursion": {
      "RecurTutor/RecIntro": {
        "long_name": "Recursion Chapter Introduction",
        "exercises": {
          "recurIntroDelegateCON": {
            "long_name": "Recursion Introduction Slideshow 1",
            "required": true,
            "points": 0.0,
            "threshold": 1.0
          },
          "recurIntroDetailsCON": {
            "long_name": "Recursion Introduction Slideshow 2",
            "required": true,
            "points": 0.0,
            "threshold": 1.0
          }
        }
      },
      "RecurTutor/Write": {
        "long_name": "How to write a recursive function",
        "exercises": {
          "recurWriteStepsCON": {
            "long_name": "Recursion Code Writing Slideshow 1",
            "required": true,
            "points": 0.0,
            "threshold": 1.0
          },
          "recurWriteSumCON": {
            "long_name": "Recursion Code Writing Slideshow 2",
            "required": true,
            "points": 0.0,
            "threshold": 1.0
          }
        }
      },
      "RecurTutor/CodeCompletionEx": {
        "long_name": "Code Completion Exercises",
        "exercises": {
          "RecCLargestPROG": {
            "long_name": "Recursion Code Completion Exercise Largest",
            "required": true,
            "points": 1.0,
            "threshold": 1.0,
            "showhide": "Show"
          },
          "RecCMultiplyPROG": {
            "long_name": "Recursion Code Completion Exercise Multiply",
            "required": true,
            "points": 1.0,
            "threshold": 1.0,
            "showhide": "Show"
          },
          "RecCGcdPROG": {
            "long_name": "Recursion Code Completion Exercise GCD",
            "required": true,
            "points": 1.0,
            "threshold": 1.0,
            "showhide": "Show"
          },
          "RecCLogPROG": {
            "long_name": "Recursion Code Completion Exercise Log",
            "required": true,
            "points": 1.0,
            "threshold": 1.0,
            "showhide": "Show"
          },
          "RecCSumtokPROG": {
            "long_name": "Recursion Code Completion Exercise Sum to k",
            "required": true,
            "points": 1.0,
            "threshold": 1.0,
            "showhide": "Show"
          },
          "RecCAddoddPROG": {
            "long_name": "Recursion Code Completion Exercise Add Odd",
            "required": true,
            "points": 1.0,
            "threshold": 1.0,
            "showhide": "Show"
          },
          "RecCSumOfDigitsPROG": {
            "long_name": "Recursion Code Completion Exercise Sum of Digits",
            "required": true,
            "points": 1.0,
            "threshold": 1.0,
            "showhide": "Show"
          },
          "RecCCountChrPROG": {
            "long_name": "Recursion Code Completion Exercise Count Characters",
            "required": true,
            "points": 1.0,
            "threshold": 1.0,
            "showhide": "Show"
          }
        }
      },
      "RecurTutor/HarderWrite": {
        "long_name": "Writing More Sophisticated Recursive Functions",
        "exercises": {}
      },
      "RecurTutor/HarderCodeCompletionEx": {
        "long_name": "Harder Code Completion Exercises",
        "exercises": {
          "RecHMinPROG": {
            "long_name": "Recursion Code Completion Exercise: Minimum",
            "required": true,
            "points": 1.0,
            "threshold": 1.0,
            "showhide": "Show"
          },
          "RecHIsReversePROG": {
            "long_name": "Recursion Code Completion Exercise: Is Reverse",
            "required": true,
            "points": 1.0,
            "threshold": 1.0,
            "showhide": "Show"
          },
          "RecHDecibinaryPROG": {
            "long_name": "Recursion Code Completion Exercise: Decimal to Binary",
            "required": true,
            "points": 1.0,
            "threshold": 1.0,
            "showhide": "Show"
          }
        }
      },
      "RecurTutor/WritingEx": {
        "long_name": "Code Writing Exercises",
        "exercises": {
          "RecWIsbalancedPROG": {
            "long_name": "Recursion Code Writing Exercise: Is Balanced",
            "required": true,
            "points": 1.0,
            "threshold": 1.0,
            "showhide": "Show"
          },
          "RecWCheckPalPROG": {
            "long_name": "Recursion Code Writing Exercise: Check Palindrom",
            "required": true,
            "points": 1.0,
            "threshold": 1.0,
            "showhide": "Show"
          },
          "RecWRevStringPROG": {
            "long_name": "Recursion Code Writing Exercise: Reverse String",
            "required": true,
            "points": 1.0,
            "threshold": 1.0,
            "showhide": "Show"
          },
          "RecWRemoveDupPROG": {
            "long_name": "Recursion Code Writing Exercise: Remove Duplicates",
            "required": true,
            "points": 1.0,
            "threshold": 1.0,
            "showhide": "Show"
          },
          "RecWPascalPROG": {
            "long_name": "Recursion Code Writing Exercise: Pascal",
            "required": true,
            "points": 1.0,
            "threshold": 1.0,
            "showhide": "Show"
          },
          "RecWCannonballPROG": {
            "long_name": "Recursion Code Writing Exercise: Cannon Ball",
            "required": true,
            "points": 1.0,
            "threshold": 1.0,
            "showhide": "Show"
          },
          "RecWStackRevPROG": {
            "long_name": "Recursion Code Writing Exercise: Stack Reversal",
            "required": true,
            "points": 1.0,
            "threshold": 1.0,
            "showhide": "Show"
          }
        }
      },
      "RecurTutor/Trace": {
        "long_name": "How to trace a recursive function?",
        "exercises": {
          "recurTraceWindCON": {
            "long_name": "Recursion Tracing Winding and Unwinding",
            "required": true,
            "points": 0.0,
            "threshold": 1.0
          },
          "recurTraceSumCON": {
            "long_name": "Recursion Tracing Sum Function",
            "required": true,
            "points": 0.0,
            "threshold": 1.0
          },
          "recurTraceFactCON": {
            "long_name": "Recursion Tracing Factorial Function",
            "required": true,
            "points": 0.0,
            "threshold": 1.0
          },
          "recurTraceDmnCON": {
            "long_name": "Recursion Tracing General Domino Effect",
            "required": true,
            "points": 0.0,
            "threshold": 1.0
          },
          "recurTraceTOHCON": {
            "long_name": "Recursion Tracing Towers of Hanoi",
            "required": true,
            "points": 0.0,
            "threshold": 1.0
          }
        }
      },
      "RecurTutor/TracingEx": {
        "long_name": "Tracing Practice Exercises",
        "exercises": {
          "RecTraceSummFwdFlow": {
            "long_name": "Recursion Forward Flow Tracing Exercises",
            "required": true,
            "points": 1.0,
            "threshold": 1.0,
            "showhide": "Show"
          },
          "RecTraceSummbckwrdFlow": {
            "long_name": "Recursion Backward Flow Tracing Exercises",
            "required": true,
            "points": 1.0,
            "threshold": 1.0,
            "showhide": "Show"
          },
          "RecTraceSummFuncErr": {
            "long_name": "Recursion Find Error Tracing Exercises",
            "required": true,
            "points": 1.0,
            "threshold": 1.0,
            "showhide": "Show"
          },
          "RecTraceSummTwoRC": {
            "long_name": "Two Recursive Calls Tracing Exercises",
            "required": true,
            "points": 1.0,
            "threshold": 1.0,
            "showhide": "Show"
          }, 
          "RecTraceSummHowmany": {
            "long_name": "Recursion How Many Times Tracing Exercises ",
            "required": true,
            "points": 1.0,
            "threshold": 1.0,
            "showhide": "Show"
          },        
          "RecTraceSummHard": {
            "long_name": "Recursion Harder Tracing Exercises",
            "required": true,
            "points": 1.0,
            "threshold": 1.0,
            "showhide": "Show"
          }
        }
      },
      "RecurTutor/RecSummaryEx": {
        "long_name": "Recursion Summary Exercises",
        "exercises": {
          "RecChapterSumm": {
            "long_name": "Recursion Summary Exercise",
            "required": true,
            "showhide": "show",
            "points": 1.0,
            "threshold": 5.0
          }
        }
      }
    },
    "Appendix": {
      "Glossary": {
        "long_name": "Glossary",
        "exercises": {}
      },
      "Bibliography": {
        "long_name": "Bibliography",
        "exercises": {}
      }
    }
  }
}

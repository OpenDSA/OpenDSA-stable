{
  "title": "COP 3530 Fall 2014",
  "build_dir": "Books",
  "code_dir": "SourceCode/",
  "code_lang": {
    "Processing": ["pde"],
    "C++": ["cpp", "h"]
  },
  "lang": "en",
  "module_origin": "http://algoviz.org",
  "exercise_server": "https://opendsa.cc.vt.edu/",
  "logging_server": "https://opendsa.cc.vt.edu/",
  "score_server": "https://opendsa.cc.vt.edu/",
  "build_JSAV": false,
  "allow_anonymous_credit": true,
  "suppress_todo": true,
  "glob_exer_options": {
    "JXOP-debug": "true"
  },
  "chapters": {
    "Preface": {
      "Intro": {
        "long_name": "How to Use this System",
        "exercises": {}
      }
    },
    "Introduction": {
      "Background/IntroDSA": {
        "long_name": "Introduction to Data Structures and Algorithms",
        "exercises": {
          "IntroSumm": {
            "long_name": "Introduction Summary Questions",
            "required": true,
            "points": 1.0,
            "threshold": 5
          }
        }
      }
    },
    "Mathematical Background": {
      "Background/MathpreIntro": {
        "long_name": "Chapter Introduction",
        "exercises": {}
      },
      "Background/SetDef": {
        "long_name": "Set Definitions",
        "exercises": {
          "StTFreltn": {
            "long_name": "Relations Exercise",
            "required": true,
            "points": 2.0,
            "threshold": 5
          },
          "StTFeqvlnc": {
            "long_name": "Equivalence Exercise",
            "required": true,
            "points": 1.0,
            "threshold": 3
          },
          "StTFprtlordr": {
            "long_name": "PartialOrder Exercise",
            "required": true,
            "points": 1.0,
            "threshold": 3
          }
        }
      },
      "Background/MiscMath": {
        "long_name": "Miscellaneous Notation",
        "exercises": {}
      },
      "Background/Logarithms": {
        "long_name": "Logarithms",
        "exercises": {}
      },
      "Background/Summations": {
        "long_name": "Summations and Recurrence Relations",
        "exercises": {}
      },
      "Background/Recursion": {
        "long_name": "Recursion",
        "exercises": {
          "TOHfigCON": {}
        }
      },
      "Background/Proofs": {
        "long_name": "Proofs",
        "exercises": {
          "twoColorCON": {}
        }
      },
      "Background/Estimation": {
        "long_name": "Estimation",
        "exercises": {}
      },
      "Background/MathpreSumm": {
        "long_name": "Chapter Summary",
        "exercises": {
          "MthBgSumm": {
            "long_name": "Math Background Summary Questions",
            "required": true,
            "points": 1.0,
            "threshold": 5
          }
        }
      }
    },
    "Algorithm Analysis": {
      "AlgAnal/AnalChap": {
        "long_name": "Chapter Intro: Algorithm Analysis",
        "exercises": {}
      },
      "AlgAnal/AnalPrelim": {
        "long_name": "Problems, Algorithms, and Programs",
        "exercises": {}
      },
      "AlgAnal/AnalIntro": {
        "long_name": "Comparing Algorithms",
        "exercises": {}
      },
      "AlgAnal/AnalCases": {
        "long_name": "Best, Average, and Worst Cases",
        "exercises": {}
      },
      "AlgAnal/AnalCompvsAlg": {
        "long_name": "A Faster Computer, or a Faster Algorithm?",
        "exercises": {}
      },
      "AlgAnal/AnalAsymptotic": {
        "long_name": "Asymptotic Analysis and Upper Bounds",
        "sections": {
          "thetadisc": {
            "long_name": "theta disclaimer",
            "showhide": "none",
            "remove": true
          }
        },
        "exercises": {}
      },
      "AlgAnal/AnalLower": {
        "long_name": "Lower Bounds and Theta Notation",
        "exercises": {
          "AnalPairSumm": {
            "long_name": "Function Pairs Exercise",
            "required": true,
            "points": 2.0,
            "threshold": 5
          }
        }
      },
      "AlgAnal/AnalProgram": {
        "long_name": "Calculating the Running Time of a Program",
        "sections": {
          "binsearchpro": {
            "long_name": "Binary Search Proficiency Exercise",
            "showhide": "none",
            "remove": false
          }
        },
        "exercises": {
          "binarySearchCON": {
            "long_name": "Binary Search Algorithm Slideshow",
            "required": true,
            "points": 0.0,
            "threshold": 1.0
          },
          "binarySearchPRO": {
            "long_name": "Binary Search Proficiency Exercise",
            "exer_options": { "JXOP-code": "none" },
            "required": true,
            "points": 1.0,
            "threshold": 1.0
          },
          "AnalProgramSumm": {
            "long_name": "Program Code Analysis Exercise",
            "required": true,
            "points": 1.0,
            "threshold": 5
          }
        }
      },
      "AlgAnal/AnalProblem": {
        "long_name": "Analyzing Problems",
        "exercises": {}
      },
      "AlgAnal/AnalMisunderstanding": {
        "long_name": "Common Misunderstandings",
        "exercises": {}
      },
      "AlgAnal/AnalMultiple": {
        "long_name": "Multiple Parameters",
        "exercises": {}
      },
      "AlgAnal/AnalSpace": {
        "long_name": "Space Bounds",
        "exercises": {}
      },
      "AlgAnal/AnalTuning": {
        "long_name": "Speeding Up Your Programs",
        "exercises": {}
      },
      "AlgAnal/AlgAnalSumm": {
        "long_name": "Algorithm Analysis Summary Exercises",
        "sections": {
          "upperbound": {
            "long_name": "Chapter Summary Questions",
            "remove": true
          },
          "allbound": {
            "long_name": "Chapter Summary Questions",
            "showhide": "none"
          }
        },
        "exercises": {
          "AlgAnalCS2114Summ": {
            "long_name": "Algorithm Analysis Summary Questions",
            "required": false,
            "points": 0.0,
            "threshold": 5
          },
          "AlgAnalSumm": {
            "long_name": "Algorithm Analysis Summary Questions",
            "required": true,
            "points": 1.0,
            "threshold": 5
          }
        }
      }
    },
    "Design 1": {
      "Design/ADT": {
        "long_name": "Abstract Data Types",
        "exercises": {
          "ADTCON": {}
  }
      }
    },
    "Linear Structures": {
      "List/ListIntro": {
        "long_name": "Chapter Introduction: Linear Structures",
        "exercises": {}
      },
      "List/ListADT": {
        "long_name": "List ADT",
        "exercises": {
          "listADTposCON": {
            "long_name": "List ADT Positions Slideshow",
            "required": true,
            "points": 0.0,
            "threshold": 1.0
          },
          "listADTnoteCON": {
            "long_name": "List ADT Notation Slideshow",
            "required": true,
            "points": 0.0,
            "threshold": 1.0
          },
          "ListADTPROG": {
            "long_name": "List ADT Exercise",
            "required": true,
            "points": 1.0,
            "threshold": 3
          }
        }
      },
      "List/ListArray": {
        "long_name": "Array-based Lists",
        "exercises": {
          "alistVarsCON": {
            "long_name": "Array-based List Variables Slideshow",
            "required": true,
            "points": 0.0,
            "threshold": 1.0
          },
          "alistIntroCON": {
            "long_name": "Array-based List Intro Slideshow",
            "required": true,
            "points": 0.0,
            "threshold": 1.0
          },
         "alistInsertCON": {
            "long_name": "Array-based List Insertion Slideshow",
            "required": true,
            "points": 0.0,
            "threshold": 1.0
          },
          "alistAppendCON": {
            "long_name": "Array-based List Append Slideshow",
            "required": true,
            "points": 0.0,
            "threshold": 1.0
          },
          "alistInsertPRO": {
            "long_name": "Array-based List Insert Exercise",
            "required": true,
            "points": 1,
            "threshold": 5
          },
          "alistRemoveCON": {
            "long_name": "Array-based List Remove",
            "required": true,
            "points": 0.0,
            "threshold": 1.0
          },
          "alistDeletePRO": {
            "long_name": "Array-based List Delete Exercise",
            "required": true,
            "points": 1,
            "threshold": 5
          },
          "ArryLstSumm": {
            "long_name": "Array-based List Summary",
            "required": true,
            "points": 1,
            "threshold": 3
          }
        }
      },
      "List/ListLinked": {
        "long_name": "Linked Lists",
        "exercises": {
          "llistRepCON": { },
          "llistBadCON": {
            "long_name": "Linked List Slideshow 1",
            "required": true,
            "points": 0.0,
            "threshold": 1.0
          },
          "llistInitCON": { },
          "llistBadDelCON": {
            "long_name": "Linked List Slideshow 2",
            "required": true,
            "points": 0.0,
            "threshold": 1.0
          },
          "llistHeaderCON": { },
          "llistVarsCON": {
            "long_name": "Linked List Variables Slideshow",
            "required": true,
            "points": 0.0,
            "threshold": 1.0
          },
          "llistConsCON": {
            "long_name": "Linked List Constructors Slideshow",
            "required": true,
            "points": 0.0,
            "threshold": 1.0
          },
          "llistInsertCON": {
            "long_name": "Linked List Insert Slideshow",
            "required": true,
            "points": 0.0,
            "threshold": 1.0
          },
          "llistSpecialCON": {
            "long_name": "Linked List Special Insert Slideshow",
            "required": true,
            "points": 0.0,
            "threshold": 1.0
          },
          "llistInsertPRO": {
            "long_name": "Linked List Insert Exercise",
            "required": true,
            "points": 1,
            "threshold": 5
          },
          "llistRemoveCON": {
            "long_name": "Linked List Remove Slideshow",
            "required": true,
            "points": 0.0,
            "threshold": 1.0
          },
          "llistRemovePRO": {
            "long_name": "Linked List Remove Exercise",
            "required": true,
            "points": 2,
            "threshold": 5
          },
          "llistOtherCON": {
            "long_name": "Linked List Position Slideshow",
            "required": true,
            "points": 0.0,
            "threshold": 1.0
          }
        }
      },
      "List/ListAnalysis": {
        "long_name": "Comparison of List Implementations",
        "exercises": {
          "ListOverhead": {
            "long_name": "Breakeven Point Exercise",
            "required": true,
            "points": 1,
            "threshold": 3
          },
          "LstLnkdSumm": {
            "long_name": "Linked List Summary Exercise",
            "required": true,
            "points": 2,
            "threshold": 6
          }
        }
      },
      "List/ListDouble": {
        "long_name": "Doubly Linked Lists",
        "exercises": {
          "dlistDiagramCON": {},
          "dlistInsertCON": {
            "long_name": "Doubly Linked List Insert",
            "required": true,
            "points": 0.0,
            "threshold": 1.0
          },
          "dlistAppendCON": {
            "long_name": "Doubly Linked List Append",
            "required": true,
            "points": 0.0,
            "threshold": 1.0
          },
          "dlistRemoveCON": {
            "long_name": "Doubly Linked List Remove",
            "required": true,
            "points": 0.0,
            "threshold": 1.0
          },
          "dlistPrevCON": {
            "long_name": "Doubly Linked List Prev",
            "required": true,
            "points": 0.0,
            "threshold": 1.0
          }
        }
      },
      "List/ListElement": {
        "long_name": "List Element Implementations",
        "exercises": {
          "listElementDataCON": {
            "long_name": "List Element Data",
            "required": true,
            "points": 0.0,
            "threshold": 1.0
          },
          "listElementTypeCON": {
            "long_name": "List Element Type",
            "required": true,
            "points": 0.0,
            "threshold": 1.0
          },
          "listElementDeleteCON": {
          },
          "LstSumm": {
            "long_name": "List Summary Questions",
            "required": true,
            "points": 1,
            "threshold": 3
          }
        }
      },
      "List/StackArray": {
        "long_name": "Array-based Stacks",
          "exercises": {
          "astackVarCON": {
            "long_name": "Array stack variables slideshow",
            "required": true,
            "points": 0.0,
            "threshold": 1.0
          },
          "astackTopCON": {
            "long_name": "Array stack top position slideshow",
            "required": true,
            "points": 0.0,
            "threshold": 1.0
          },
          "astackPushCON": {
            "long_name": "Array stack push slideshow",
            "required": true,
            "points": 0.0,
            "threshold": 1.0
          },
          "astackPopCON": {
            "long_name": "Array stack pop slideshow",
            "required": true,
            "points": 0.0,
            "threshold": 1.0
          },
          "astackPushPRO": {
            "long_name": "Array-based Stack Push Exercise",
            "required": true,
            "points": 1,
            "threshold": 5
          },
          "astackPopPRO": {
            "long_name": "Array-based Stack Pop Exercise",
            "required": true,
            "points": 1,
            "threshold": 5
          }
        }
      },
      "List/StackLinked": {
        "long_name": "Linked Stacks",
        "exercises": {
          "lstackDiagramCON": {},
          "lstackPushCON": {
            "long_name": "Linked stack push",
            "required": true,
            "points": 0.0,
            "threshold": 1.0
          },
          "lstackPopCON": {
            "long_name": "Linked stack pop",
            "required": true,
            "points": 0.0,
            "threshold": 1.0
          },
          "lstackPushPRO": {
            "long_name": "Linked Stack Push Exercise",
            "required": true,
            "points": 1,
            "threshold": 5
          },
          "lstackPopPRO": {
            "long_name": "Linked Stack Pop Exercise",
            "required": true,
            "points": 1,
            "threshold": 5
          }
        }
      },
      "List/Freelist": {
        "long_name": "Freelists",
        "exercises": {
          "listFreeCON": {
            "long_name": "Freelist Slideshow 1",
            "required": true,
            "points": 0.0,
            "threshold": 1.0
          }
        }
      },
      "List/StackRecur": {
        "long_name": "Implementing Recursion",
        "exercises": {}
      },
      "List/Queue": {
        "long_name": "Queues",
        "exercises": {
          "aqueueFirstCON": {
            "long_name": "Array-based Queue Positions Slideshow",
            "required": true,
            "points": 0.0,
            "threshold": 1.0
          },
          "aqueueDriftCON": {
            "long_name": "Array-based Queue Drift Slideshow",
            "required": true,
            "points": 0.0,
            "threshold": 1.0
          },
          "aqueueBadCON": {
            "long_name": "Array-based Queue Bad Representation Slideshow",
            "required": true,
            "points": 0.0,
            "threshold": 1.0
          },
          "aqueueCircularCON": {
            "long_name": "Circular Array-based Queue Slideshow",
            "required": true,
            "points": 0.0,
            "threshold": 1.0
          },
          "aqueueEmptyCON": {
            "long_name": "Empty Circular Array-based Queue Slideshow",
            "required": true,
            "points": 0.0,
            "threshold": 1.0
          },
          "aqueueVarCON": {
            "long_name": "Array-based Queue Variables Slideshow",
            "required": true,
            "points": 0.0,
            "threshold": 1.0
          },
          "aqueueEnqueuePRO": {
            "long_name": "Array-based Queue Enqueue Exercise",
            "required": true,
            "points": 1,
            "threshold": 5
          },
          "aqueueDequeuePRO": {
            "long_name": "Array-based Queue Dequeue Exercise",
            "required": true,
            "points": 1,
            "threshold": 5
          }
        }
      },
      "List/QueueLinked": {
        "long_name": "Linked Queues",
        "exercises": {
          "lqueueIntroCON": {
            "long_name": "Linked Queue Intro",
            "required": true,
            "points": 0.0,
            "threshold": 1.0
          },
          "lqueueEnqueueCON": {
            "long_name": "Linked Queue Enqueue",
            "required": true,
            "points": 0.0,
            "threshold": 1.0
          },
          "lqueueDequeueCON": {
            "long_name": "Linked Queue Dequeue",
            "required": true,
            "points": 0.0,
            "threshold": 1.0
          },
          "lqueueEnqueuePRO": {
            "long_name": "Linked Queue Enqueue Exercise",
            "required": true,
            "points": 1,
            "threshold": 5
          },
          "lqueueDequeuePRO": {
            "long_name": "Linked Queue Dequeue Exercise",
            "required": true,
            "points": 1,
            "threshold": 5
          },
          "StckQSumm": {
            "long_name": "Stack/Queue Summary Exercise",
            "required": true,
            "points": 1,
            "threshold": 5
          }
        }
      },
      "List/ListSumm": {
        "long_name": "List Chapter Summary",
        "exercises": {
          "LstChptrSumm": {
            "long_name": "List Chapter Summary Exercise",
            "required": true,
            "points": 2,
            "threshold": 5
          }
        }
      }
    },
    "Design 2": {
      "Design/DesignPatterns": {
        "long_name": "Design Patterns",
        "exercises": {}
      },
      "Design/Comparison": {
        "long_name": "Comparing Records",
        "exercises": {
          "CompareSumm": {
            "long_name": "Record Comparison Summary Exercise",
            "required": true,
            "points": 1,
            "threshold": 5
          }
        }
      },
      "Design/Dictionary": {
        "long_name": "The Dictionary ADT",
        "exercises": {}
      },
      "Design/DesignSumm": {
        "long_name": "Design Chapter Summary",
        "exercises": {
          "DesignSumm": {
            "long_name": "Design Summary Exercise",
            "required": true,
            "points": 1,
            "threshold": 5
          }
        }
      }
    },
    "Binary Trees": {
      "Binary/BinaryTreeIntro": {
        "long_name": "Binary Trees Chapter Introduction",
        "exercises": {}
      },
      "Binary/BinaryTree": {
        "long_name": "Binary Tree Terminology",
        "exercises": {
          "DprobsAll": {
            "long_name": "Tree Definition Summary",
            "required": true,
            "points": 3,
            "threshold": 8
          }
        }
      },
      "Binary/BinaryTreeFullThm": {
        "long_name": "Full Binary Tree Theorem",
        "exercises": {}
      },
      "Binary/BinaryTreeTraversal": {
        "long_name": "Binary Tree Traversals",
        "exercises": {
          "BTLeafPROG": {
            "long_name": "Node Count Programming Exercise",
            "required": true,
            "points": 1.0,
            "threshold": 1
          },
          "btTravInorderPRO": {
            "long_name": "Binary Tree Inorder Traversal Exercise",
            "exer_options": { "JXOP-code": "none" },
            "required": true,
            "points": 1.0,
            "threshold": 0.90
          },
          "btTravPreorderPRO": {
            "long_name": "Binary Tree Preorder Traversal Exercise",
            "exer_options": { "JXOP-code": "none" },
            "required": true,
            "points": 1.0,
            "threshold": 0.90
          },
          "btTravPostorderPRO": {
            "long_name": "Binary Tree Postorder Traversal Exercise",
            "exer_options": { "JXOP-code": "none" },
            "required": true,
            "points": 1.0,
            "threshold": 0.90
          }
        }
      },
      "Binary/BinaryTreeImpl": {
        "long_name": "Full Binary Tree Node Implementations",
        "exercises": {}
      },
      "Binary/Composite": {
        "long_name": "Composite Design Pattern",
        "exercises": {}
      },
      "Binary/BinaryTreeNodeSpace": {
        "long_name": "Full Binary Tree Node Space Requirements",
        "exercises": {
          "TreeOverheadSumm": {
            "long_name": "Tree Overhead Exercise",
            "required": true,
            "points": 2,
            "threshold": 5
          }
        }
      },
      "Binary/BST": {
        "long_name": "Binary Search Trees",
        "exercises": {
          "BSTsearchCON": {
            "long_name": "BST Search Slideshow",
            "required": false,
            "points": 0.0,
            "threshold": 1.0
          },
          "BSTsearchPRO": {
            "long_name": "BST Search Proficiency Exercise",
            "exer_options": { "JXOP-code": "none" },
            "required": true,
            "points": 1.0,
            "threshold": 0.90
          },
          "BSTinsertCON": {
            "long_name": "BST Insert Slideshow",
            "required": false,
            "points": 0.0,
            "threshold": 1.0
          },
          "BSTinsertPRO": {
            "long_name": "BST Insert Proficiency Exercise",
            "exer_options": { "JXOP-code": "none" },
            "required": true,
            "points": 1.0,
            "threshold": 0.90
          },
          "BSTdeletemaxCON": {
            "long_name": "BST deletemax Slideshow",
            "required": false,
            "points": 0.0,
            "threshold": 1.0
          },
          "BSTremoveCON": {
            "long_name": "BST remove Slideshow",
            "required": false,
            "points": 0.0,
            "threshold": 1.0
          },
          "BSTremovePRO": {
            "long_name": "BST Remove Proficiency Exercise",
            "exer_options": { "JXOP-code": "none" },
            "required": true,
            "points": 2.0,
            "threshold": 0.90
          }
        }
      },
      "Binary/BSTDict": {
        "long_name": "Dictionary Implementation with BST",
        "exercises": {}
      },
      "Binary/CompleteTree": {
        "long_name": "Array Implementation for Complete Trees",
        "exercises": {}
      },
      "Binary/Heaps": {
        "long_name": "Heaps and Priority Queues",
        "exercises": {
          "heapinsertCON": {
            "long_name": "Heap insert Slideshow",
            "required": false,
            "points": 0.0,
            "threshold": 1.0
          },
          "heapinsertPRO": {
            "long_name": "Heap Insert Proficiency Exercise",
            "exer_options": { "JXOP-code": "none" },
            "required": true,
            "points": 2.0,
            "threshold": 0.90
          },
          "heapbuildCON": {
            "long_name": "Heapbuild Slideshow",
            "required": false,
            "points": 0.0,
            "threshold": 1.0
          },
          "heapbuildPRO": {
            "long_name": "Heap Build Proficiency Exercise",
            "exer_options": { "JXOP-code": "none" },
            "required": true,
            "points": 1.0,
            "threshold": 0.90
          },
          "heapbuildProofCON": {
            "long_name": "Heap build analysis proof Slideshow",
            "required": false,
            "points": 0.0,
            "threshold": 1.0
          },
          "BuildHeapVisualProof": {
            "long_name": "Buildheap Visual Proof",
            "required": false,
            "points": 0,
            "showhide": "none",
            "threshold": 1.0
          },
          "heapmaxCON": {
            "long_name": "Remove Max Slideshow",
            "required": false,
            "points": 0.0,
            "threshold": 1.0
          },
          "heapremovePRO": {
            "long_name": "Heap Remove Exercise",
            "exer_options": { "JXOP-code": "none" },
            "required": true,
            "points": 2.0,
            "threshold": 0.90
          },
          "heapremoveCON": {
            "long_name": "Remove Any Slideshow",
            "required": false,
            "points": 0.0,
            "threshold": 1.0
          },
          "HeapSumm": {
            "long_name": "BST/Heap Summary",
            "required": true,
            "points": 1,
            "threshold": 3
          }
        }
      },
      "Binary/Huffman": {
        "long_name": "Huffman Coding Trees",
        "exercises": {
          "huffmanBuildCON": {
            "long_name": "Huffman Coding Tree Slideshow: Build",
            "required": true,
            "points": 0.0,
            "threshold": 1.0
          },
          "huffmanLabelCON": {
            "long_name": "Huffman Coding Tree Slideshow: Label Edges",
            "required": true,
            "points": 0.0,
            "threshold": 1.0
          },
          "huffmanCodesCON": {
            "long_name": "Huffman Coding Tree Slideshow: Setting Codes",
            "required": true,
            "points": 0.0,
            "threshold": 1.0
          },
          "huffmanDecodeCON": {
            "long_name": "Huffman Coding Tree Slideshow: Decoding",
            "required": true,
            "points": 0.0,
            "threshold": 1.0
          }
        }
      },
      "Binary/TreeTrie": {
        "long_name": "Trees versus Tries",
        "exercises": {
          "TreeTimeline": {
            "long_name": "Tree timeline Slideshow",
            "required": true,
            "points": 0.0,
            "threshold": 1.0
          },
          "TrieTimeline": {
            "long_name": "Trie timeline Slideshow",
            "required": true,
            "points": 0.0,
            "threshold": 1.0
          }
        }
      },
      "Development/HuffProof": {
        "long_name": "Proof for Huffman Coding",
        "exercises": {}
      }
    },
    "Sorting": {
      "Sorting/InSort": {
        "long_name": "Chapter Introduction: Sorting",
        "exercises": {}
      },
      "Sorting/SortNotation": {
        "long_name": "Sorting Terminology and Notation",
        "exercises": {
          "SortIntroSumm": {
            "long_name": "Sorting Intro Summary",
            "required": true,
            "points": 1.0,
            "threshold": 3
          }
        }
      },
      "Sorting/InsertionSort": {
        "long_name": "Insertion Sort",
        "sections": {
          "InsertionSortAnalysis": {
            "long_name": "Insertion Sort Analysis Discussion",
            "showhide": "hide"
          }
        },
        "exercises" : {
          "insertionsortS1CON": {
            "long_name": "Insertion Sort Slideshow 1",
            "required": false,
            "points": 0.0,
            "threshold": 1.0
          },
          "insertionsortS2CON": {
            "long_name": "Insertion Sort Slideshow 2",
            "required": false,
            "points": 0.0,
            "threshold": 1.0
          },
          "insertionsortS3CON": {
            "long_name": "Insertion Sort Slideshow 3",
            "required": false,
            "points": 0.0,
            "threshold": 1.0
          },
          "insertionsortAV": {
            "long_name": "Insertion Sort Visualization",
            "required": false,
            "points": 0,
            "showhide": "none",
            "threshold": 1.0
          },
          "InssortPRO": {
            "long_name": "Insertion Sort Proficiency Exercise",
            "required": true,
            "points": 1.0,
            "threshold": 5
          },
          "InssortSumm": {
            "long_name": "Insertion Sort Summary Exercise",
            "required": true,
            "points": 1.0,
            "threshold": 5
          }
        }
      },
      "Sorting/BubbleSort": {
        "long_name": "Bubble Sort",
        "sections": {
          "BubbleSortAnalysis": {
            "long_name": "Bubble Sort Analysis Discussion",
            "showhide": "hide"
          }
        },
        "exercises": {
          "bubblesortS1CON": {
            "long_name": "Bubble Sort Slideshow 1",
            "required": false,
            "points": 0.0,
            "threshold": 1.0
          },
          "bubblesortS2CON": {
            "long_name": "Bubble Sort Slideshow 2",
            "required": false,
            "points": 0.0,
            "threshold": 1.0
          },
          "bubblesortAV": {
            "long_name": "Bubble Sort Visualization",
            "required": false,
            "points": 0,
            "showhide": "none",
            "threshold": 1.0
          },
          "BubsortPRO": {
            "long_name": "Bubble Sort Proficiency Exercise",
            "required": true,
            "points": 2.0,
            "threshold": 5
          },
          "BubsortSumm": {
            "long_name": "Bubble Sort Summary Exercise",
            "required": true,
            "points": 1.0,
            "threshold": 5
          }
        }
      },
      "Sorting/SelectionSort": {
        "long_name": "Selection Sort",
        "sections": {
          "SelectionSortAnalysis": {
            "long_name": "Selection Sort Analysis Discussion",
            "showhide": "hide"
          }
        },
        "exercises": {
          "selectionsortS1CON": {
            "long_name": "Selection Sort Slideshow 1",
            "required": false,
            "points": 0.0,
            "threshold": 1.0
          },
          "selectionsortS2CON": {
            "long_name": "Selection Sort Slideshow 2",
            "required": false,
            "points": 0.0,
            "threshold": 1.0
          },
          "selectionsortAV": {
            "long_name": "Selection Sort Visualization",
            "required": false,
            "points": 0,
            "showhide": "none",
            "threshold": 1.0
          },
          "SelsortPRO": {
            "long_name": "Selection Sort Proficiency Exercise",
            "required": true,
            "points": 2.0,
            "threshold": 5
          },
          "SelsortSumm": {
            "long_name": "Selection Sort Summary Exercise",
            "required": true,
            "points": 1.0,
            "threshold": 5
          }
        }
      },
      "Sorting/ExchangeSort": {
        "long_name": "The Cost of Exchange Sorting",
        "exercises": {
          "FindInversionsPRO": {
            "long_name": "Inversions Proficiency Exercise",
            "required": true,
            "points": 2.0,
            "threshold": 5
          },
          "ExchangeSumm": {
            "long_name": "Exchange Sorting Summary Exercise",
            "required": true,
            "points": 1.0,
            "threshold": 5
          }
        }
      },
      "Sorting/SortOpt": {
        "long_name": "Optimizing Sorts with Code Tuning",
        "sections": {
          "inssortnoswapex": {
            "long_name": "Insertion Sort Exercise",
            "showhide": "none",
            "remove": true
          }
        },
        "exercises": {
          "insertionSortWithoutSwapPRO": {
            "long_name": "Insertion Sort Without Swap Proficiency Exercise",
            "required": false,
            "points": 0.0,
            "threshold": 0.9
          }
        }
      },
      "Sorting/Shellsort": {
        "long_name": "Shellsort",
        "exercises": {
          "shellsortCON1": {
            "long_name": "Shellsort Slideshow 1",
            "required": false,
            "points": 0.0,
            "threshold": 1.0
          },
          "shellsortCON2": {
            "long_name": "Shellsort Slideshow 2",
            "required": false,
            "points": 0.0,
            "threshold": 1.0
          },
          "shellsortCON3": {},
          "shellsortCON4": {
            "long_name": "Shellsort Slideshow 3",
            "required": false,
            "points": 0.0,
            "threshold": 1.0
          },
          "shellsortCON5": {
            "long_name": "Shellsort Slideshow 4",
            "required": false,
            "points": 0.0,
            "threshold": 1.0
          },
          "shellsortCON6": {},
          "shellsortCON7": {
            "long_name": "Shellsort Slideshow 5",
            "required": false,
            "points": 0.0,
            "threshold": 1.0
          },
          "shellsortCON8": {},
          "shellsortCON9": {
            "long_name": "Shellsort Slideshow 6",
            "required": false,
            "points": 0.0,
            "threshold": 1.0
          },
          "ShellsortSublist": {
            "long_name": "Shellsort Sublist Exercise",
            "required": true,
            "points": 1.0,
            "threshold": 5
          },
          "shellsortAV": {
            "long_name": "Shellsort Visualization",
            "required": false,
            "points": 0,
            "showhide": "none",
            "threshold": 1.0
          },
          "ShellsortSeries": {
            "long_name": "Shellsort Series Exercise",
            "required": true,
            "points": 1.0,
            "threshold": 5
          },
          "shellsortPRO": {
            "long_name": "Shellsort Proficiency Exercise",
            "required": true,
            "points": 2.0,
            "threshold": 0.90,
            "exer_options": {
              "JXOP-feedback": "continuous",
              "JXOP-fixmode": "fix"
            }
          },
          "shellsortPerf": {
            "long_name": "Shellsort Performance Activity",
            "required": true,
            "points": 2.0,
            "threshold": 1.0
          },
          "ShellsortSumm": {
            "long_name": "Shellsort Summary Exercise",
            "required": true,
            "points": 1.0,
            "threshold": 5
          }
        }
      },
      "Sorting/Mergesort": {
        "long_name": "Mergesort Concepts",
        "sections": {
          "MergeSortAnalysis": {
            "long_name": "Merge Sort Analysis Discussion",
            "showhide": "hide"
          }
        },
        "exercises": {
          "mergesortAV": {
            "long_name": "Mergesort Visualization",
            "required": false,
            "points": 0,
            "showhide": "none",
            "threshold": 1.0
          },
          "mergesortCON": {
            "long_name": "Merging Slideshow",
            "required": false,
            "points": 0.0,
            "threshold": 1.0
          },
          "MergesortMergePRO": {
            "long_name": "Mergesort Merging Proficiency Exercise",
            "required": true,
            "points": 1.0,
            "threshold": 5
          },
          "mergesortPRO": {
            "long_name": "Mergesort Proficiency Exercise",
            "required": true,
            "points": 2.0,
            "threshold": 0.90,
            "exer_options": {
              "JXOP-feedback": "continuous",
              "JXOP-fixmode": "fix"
            }
          }
        }
      },
      "Sorting/MergesortImpl": {
        "long_name": "Implementing Mergesort",
        "exercises": {
          "mergeImplS1CON": {
            "long_name": "Mergesort Implementation Slideshow 1",
            "required": false,
            "points": 0.0,
            "threshold": 1.0
          },
          "mergeImplS2CON": {
            "long_name": "Mergesort Implementation Slideshow 2",
            "required": false,
            "points": 0.0,
            "threshold": 1.0
          },
          "MergesortSumm": {
            "long_name": "Mergesort Summary Exercise",
            "required": true,
            "points": 1.0,
            "threshold": 5
          }
        }
      },
      "Sorting/Quicksort": {
        "long_name": "Quicksort",
        "sections": {
          "QuickSortAnalysis": {
            "long_name": "Quick Sort Analysis Discussion",
            "showhide": "hide"
          }
        },
        "exercises": {
          "QuicksortPivotPRO": {
            "long_name": "Quicksort Pivot Proficiency Exercise",
            "required": true,
            "points": 1.0,
            "threshold": 5
          },
          "quicksortAV": {
            "long_name": "Quicksort Visualization",
            "required": false,
            "points": 0,
            "showhide": "none",
            "threshold": 1.0
          },
          "quicksortCON": {
            "long_name": "Quicksort Partition Slideshow",
            "required": false,
            "points": 0.0,
            "threshold": 1.0
          },
          "QuicksortPartitPRO": {
            "long_name": "Quicksort Partition Proficiency Exercise",
            "required": true,
            "points": 1.0,
            "threshold": 5
          },
          "quicksortPRO": {
            "long_name": "Quicksort Proficiency Exercise",
            "required": true,
            "points": 2.0,
            "threshold": 0.90,
            "exer_options": {
              "JXOP-feedback": "continuous",
              "JXOP-fixmode": "fix"
            }
          },
          "QuicksortSumm": {
            "long_name": "Quicksort Summary Exercise",
            "required": true,
            "points": 1.0,
            "threshold": 5
          }
        }
      },
      "Sorting/Heapsort": {
        "long_name": "Heapsort",
        "sections": {
          "HeapSortAnalysis": {
            "long_name": "Heap Sort Analysis Discussion",
            "showhide": "hide"
          }
        },
        "exercises": {
          "heapsortCON": {
            "long_name": "Heapsort Slideshow",
            "required": false,
            "points": 0.0,
            "threshold": 1.0
          },
          "HeapsortStepPRO": {
            "long_name": "Heapsort RemoveMax Proficiency Exercise",
            "required": true,
            "points": 2.0,
            "threshold": 5
          },
          "heapsortPRO": {
            "long_name": "Heapsort Proficiency Exercise",
            "required": true,
            "points": 2.0,
            "threshold": 0.9,
            "exer_options": {
              "JXOP-feedback": "continuous",
              "JXOP-fixmode": "fix",
              "JXOP-code": "none"
            }
          },
          "HeapsortSumm": {
            "long_name": "Heapsort Summary Exercise",
            "required": true,
            "points": 1.0,
            "threshold": 5
          }
        }
      },
      "Sorting/BinSort": {
        "long_name": "Binsort",
        "dispModComp": true,
        "sections": {
          "BinSortAnalysis": {
            "long_name": "Bin Sort Analysis Discussion",
            "showhide": "hide"
          }
        },
        "exercises": {
          "binsortS1CON": {
            "long_name": "Binsort Slideshow 1",
            "required": false,
            "points": 0.0,
            "threshold": 1.0
          },
          "binsortS2CON": {
            "long_name": "Binsort Slideshow 2",
            "required": false,
            "points": 0.0,
            "threshold": 1.0
          }
        }
      },
      "Sorting/RadixSort": {
        "long_name": "Radix Sort",
        "sections": {
          "RadixSortAnalysis": {
            "long_name": "Radix Sort Analysis Discussion",
            "showhide": "hide"
          }
        },
        "exercises": {
          "radixLinkAV": {
            "long_name": "Radix Sort Linked Visualization",
            "required": false,
            "points": 0,
            "showhide": "none",
            "threshold": 1.0
          },
          "RadixsortPRO": {
            "long_name": "Radix Sort Proficiency Exercise",
            "required": true,
            "points": 2.0,
            "threshold": 5
          },
          "radixArrayAV": {
            "long_name": "Radix Sort Array Visualization",
            "required": false,
            "points": 0,
            "showhide": "none",
            "threshold": 1.0
          },
          "RadixSortSumm": {
            "long_name": "Radix Sort Summary Exercise",
            "required": true,
            "points": 1.0,
            "threshold": 5
          }
        }
      },
      "Sorting/SortingEmpirical": {
        "long_name": "An Empirical Comparison of Sorting Algorithms",
        "exercises": {
          "SortAlgCompSumm": {
            "long_name": "Sort Comparison Summary Exercise",
            "required": true,
            "points": 1.0,
            "threshold": 5
          }
        }
      },
      "Sorting/SortingLowerBound": {
        "long_name": "Lower Bounds of Sorting",
        "exercises": {
          "SortBoundSumm": {
            "long_name": "Lower Bounds Summary Exercise",
            "required": true,
            "points": 1.0,
            "threshold": 4
          }
        }
      },
      "Sorting/SortSumm": {
        "long_name": "Sorting Chapter Summary Exercises",
        "exercises": {
          "ChapterSumm": {
            "long_name": "Sorting Chapter Summary Exercise",
            "required": true,
            "points": 2,
            "threshold": 10
          }
        }
      }
    },
    "Hashing": {
      "Hashing/HashIntro": {
        "long_name": "Introduction",
        "dispModComp": true,
        "exercises": {
          "hashIntroCON1": {
            "long_name": "Hashing Intro Slideshow",
            "required": false,
            "points": 0.0,
            "threshold": 1.0
          }
        }
      },
      "Hashing/HashFunc": {
        "long_name": "Hash Function Principles",
        "exercises": {
          "Birthday": {
            "long_name": "Birthday Problem Calculator",
            "required": true,
            "points": 1.0,
            "threshold": 1.0
          }
        }
      },
      "Hashing/HashFuncExamp": {
        "long_name": "Sample Hash Functions",
        "exercises": {
          "hashFuncExCON1": {
            "long_name": "Hash Function Slideshow 1",
            "required": false,
            "points": 0.0,
            "threshold": 1.0
          },
          "hashFuncExCON2": {
            "long_name": "Hash Function Slideshow 2",
            "required": false,
            "points": 0.0,
            "threshold": 1.0
          },
          "MidSquare": {
            "long_name": "Mid-Square Calculator",
            "required": true,
            "points": 0.5,
            "threshold": 1.0
          },
          "StringSimple": {
            "long_name": "Simple String Folding Calculator",
            "required": true,
            "points": 0.5,
            "threshold": 1.0
          },
          "StringSfold": {
            "long_name": "Improved String Folding Calculator",
            "required": true,
            "points": 0.5,
            "threshold": 1.0
          },
          "HashFuncPROSumm": {
            "long_name": "Hash Function Proficiency Summary",
            "required": true,
            "points": 1.0,
            "threshold": 5
          },
          "HashFuncSumm": {
            "long_name": "Hash Function Summary Exercise",
            "required": true,
            "points": 1.0,
            "threshold": 5
          }
        }
      },
      "Hashing/OpenHash": {
        "long_name": "Open Hashing",
        "exercises": {
          "openhashCON1": {},
          "OpenHashPRO": {
            "long_name": "Open Hashing Proficiency Exercise",
            "required": true,
            "points": 2.0,
            "threshold": 5
          }
        }
      },
      "Hashing/BucketHash": {
        "long_name": "Bucket Hashing",
        "exercises": {
          "buckethashCON1": {
            "long_name": "Bucket Hashing Slideshow 1",
            "required": false,
            "points": 0.0,
            "threshold": 1.0
          },
          "buckethashCON2": {
            "long_name": "Bucket Hashing Slideshow 2",
            "required": false,
            "points": 0.0,
            "threshold": 1.0
          },
          "HashingBucketPRO": {
            "long_name": "Bucket Hashing Proficiency Exercise",
            "required": true,
            "points": 1.0,
            "threshold": 5
          },
          "HashingBucket2PRO": {
            "long_name": "Alternate Bucket Hashing Proficiency Exercise",
            "required": true,
            "points": 1.0,
            "threshold": 5
          }
        }
      },
      "Hashing/HashCSimple": {
        "long_name": "Collision Resolution",
        "exercises": {
          "linProbeCON1": {
            "long_name": "Linear Probing Slideshow 1",
            "required": false,
            "points": 0.0,
            "threshold": 1.0
          },
          "linProbeCON2": {
            "long_name": "Linear Probing Slideshow 2",
            "required": false,
            "points": 0.0,
            "threshold": 1.0
          },
          "HashingLinearProbePRO": {
            "long_name": "Linear Probing Proficiency Exercise",
            "required": true,
            "points": 1.0,
            "threshold": 5
          }
        }
      },
      "Hashing/HashCImproved": {
        "long_name": "Improved Collision Resolution",
        "exercises": {
          "collisionCON1": {
            "long_name": "Linear Probing By Steps Slideshow 1",
            "required": false,
            "points": 0.0,
            "threshold": 1.0
          },
          "collisionCON2": {
            "long_name": "Linear Probing By Steps Slideshow 2",
            "required": false,
            "points": 0.0,
            "threshold": 1.0
          },
          "HashingLinearStepProbePRO": {
            "long_name": "Linear Probing By Steps Proficiency Exercise",
            "required": true,
            "points": 2.0,
            "threshold": 5
          },
          "collisionCON3": {
            "long_name": "Pseudo-Random Probing Slideshow",
            "required": false,
            "points": 0.0,
            "threshold": 1.0
          },
          "HashingPseudoRandomProbePRO": {
            "long_name": "Pseudo-Random Probing Proficiency Exercise",
            "required": true,
            "points": 2.0,
            "threshold": 5
          },
          "collisionCON4": {
            "long_name": "Quadratic Probing Slideshow 1",
            "required": false,
            "points": 0.0,
            "threshold": 1.0
          },
          "collisionCON5": {
            "long_name": "Quadratic Probing Slideshow 2",
            "required": false,
            "points": 0.0,
            "threshold": 1.0
          },
          "HashingQuadraticProbePRO": {
            "long_name": "Quadratic Probing Proficiency Exercise",
            "required": true,
            "points": 2.0,
            "threshold": 5
          },
          "collisionCON6": {
            "long_name": "Double Hashing Slideshow 1",
            "required": false,
            "points": 0.0,
            "threshold": 1.0
          },
          "collisionCON7": {
            "long_name": "Double Hashing Slideshow 2",
            "required": false,
            "points": 0.0,
            "threshold": 1.0
          },
          "collisionCON8": {
            "long_name": "Double Hashing Slideshow 3",
            "required": false,
            "points": 0.0,
            "threshold": 1.0
          },
          "HashingDoubleProbePRO": {
            "long_name": "Double Hashing Proficiency Exercise",
            "required": true,
            "points": 2.0,
            "threshold": 5
          },
          "hashAV": {
            "long_name": "Hashing Visualization",
            "required": false,
            "showhide": "none",
            "points": 0,
            "threshold": 1.0
          }
        }
      },
      "Hashing/HashAnal": {
        "long_name": "Analysis of Closed Hashing",
        "exercises": {
          "HashAnalSumm": {
            "long_name": "Analysis of Closed Hashing Summary Exercise",
            "required": true,
            "points": 1.0,
            "threshold": 5
          }
        }
      },
      "Hashing/HashDel": {
        "long_name": "Deletion",
        "exercises": {
          "hashdelCON1": {
            "long_name": "Hash Deletion Slideshow",
            "required": false,
            "points": 0.0,
            "threshold": 1.0
          },
          "HashingDelPRO": {
            "long_name": "Hash Deletion Proficiency Exercise",
            "required": true,
            "points": 2.0,
            "threshold": 0.90
          },
          "HashDelSumm": {
            "long_name": "Hash Deletion Summary Exercise",
            "required": true,
            "points": 1.0,
            "threshold": 3
          }
        }
      },
      "Hashing/HashSumm": {
        "long_name": "Hashing Chapter Summary Exercises",
        "exercises": {
          "HashChapterSumm": {
            "long_name": "Hashing Chapter Summary Exercise",
            "required": true,
            "points": 2.0,
            "threshold": 10
          }
        }
      }
    },
    "General Trees": {
      "Development/UnionFind": {
        "long_name": "UnionFind",
        "exercises": {
          "ufCON": {
            "long_name": "Union/Find Example",
            "required": false,
            "points": 0.0,
            "threshold": 1.0
          },
          "pathcompCON": {
            "long_name": "Union/Find Path Compression Example",
            "required": false,
            "points": 0.0,
            "threshold": 1.0
          },
          "UnionFindPRO": {
            "long_name": "Union/Find Proficiency Exercise",
            "required": true,
            "points": 2.0,
            "threshold": 0.90
          }
        }
      }
    },
    "Graphs": {
      "Development/GraphIntro": {
        "long_name": "Introduction and Terminology",
        "exercises": {}
      },
      "Development/GraphImpl": {
        "long_name": "Graph Implementation",
        "exercises": {}
      },
      "Development/GraphTraversal": {
        "long_name": "Graph Traversal",
        "exercises": {
          "graphDFS": {
            "long_name": "Depth First Search Visualization",
            "required": false,
            "points": 0,
            "showhide": "none",
            "threshold": 1.0
          },
          "graphDFSPE": {
            "long_name": "DFS Proficiency Exercise",
            "required": true,
            "points": 2.0,
            "threshold": 0.90
          },
          "graphBFS": {
            "long_name": "Breadth First Search Visualization",
            "required": false,
            "points": 0,
            "showhide": "none",
            "threshold": 1.0
          },
          "graphBFSPE": {
            "long_name": "BFS Proficiency Exercise",
            "required": true,
            "points": 2.0,
            "threshold": 0.90
          }
        }
      },
      "Development/GraphTopsort": {
        "long_name": "Topological Sort",
        "exercises": {
          "topsortCON1": {},
          "topSort": {
            "long_name": "Topological Sort (DFS) visualization",
            "required": false,
            "points": 0,
            "showhide": "none",
            "threshold": 1.0
          },
          "qTopSort": {
            "long_name": "Topological Sort (Queue) visualization",
            "required": false,
            "points": 0,
            "showhide": "none",
            "threshold": 1.0
          }
        }
      },
      "Development/GraphShortest": {
        "long_name": "Shortest Paths Problems",
        "exercises": {
          "dijkstraCON1": {},
          "DijkstraAV": {
            "long_name": "Dijkstra's Algorithm Visualization",
            "required": false,
            "points": 0,
            "showhide": "none",
            "threshold": 1.0
          },
          "DijkstraPE": {
            "long_name": "Dijkstra's Algorithm Proficiency Exercise",
            "required": true,
            "points": 2.0,
            "threshold": 0.90
          }
        }
      },
      "Development/MCST": {
        "long_name": "Minimal Cost Spanning Trees",
        "exercises": {
          "MCSTCON1": {},
          "PrimAV": {
            "long_name": "Prim's Algorithm Visualization",
            "required": false,
            "points": 0,
            "showhide": "none",
            "threshold": 1.0
          },
          "PrimAVPQ": {
            "long_name": "Prim's with Priority Queue Algorithm Visualization",
            "required": false,
            "points": 0,
            "showhide": "none",
            "threshold": 1.0
          },
          "PrimAVPE": {
            "long_name": "Prim's Algorithm Proficiency Exercise",
            "required": true,
            "points": 2.0,
            "threshold": 0.90
          },
          "KruskalUFAV": {
            "long_name": "Kruskal's Algorithm Visualization",
            "required": false,
            "points": 0,
            "showhide": "none",
            "threshold": 1.0
          },
          "KruskalPE": {
            "long_name": "Kruskal's Algorithm Proficiency Exercise",
            "required": true,
            "points": 2.0,
            "threshold": 0.90
          }
        }
      },
      "Development/Kruskal": {
        "long_name": "Kruskal's Algorithm",
        "exercises": {
          "KruskalUFAV": {
            "long_name": "Kruskal's Algorithm Visualization",
            "required": false,
            "points": 0,
            "showhide": "none",
            "threshold": 1.0
          },
          "KruskalPE": {
            "long_name": "Kruskal's Algorithm Proficiency Exercise",
            "required": true,
            "points": 2.0,
            "threshold": 0.90
          }
        }
      },
      "Development/Floyd": {
        "long_name": "All-Pairs Shortest Paths",
        "exercises": {}
      }
    },
    "Appendix": {
      "Glossary": {
        "long_name": "Glossary",
        "exercises": {}
      },
      "Bibliography": {
        "long_name": "Bibliography",
        "exercises": {}
      }
    }
  }
}

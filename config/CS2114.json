{
  "title": "CS2114 Summer I, 2014",
  "build_dir": "Books",
  "code_dir": "SourceCode/",
  "code_lang": "Processing",
  "module_origin": "http://algoviz.org",
  "backend_address": "https://opendsa.cc.vt.edu/",
  "build_JSAV": false,
  "allow_anonymous_credit": true,
  "suppress_todo": true,
  "chapters": {
    "Preface": {
      "Intro": {
        "long_name": "How to Use this System",
        "exercises": {}
      }
    },
    "Introduction": {
      "Background/IntroDSA.rst": {
        "long_name": "Introduction to Data Structures and Algorithms",
        "exercises": {
          "IntroSumm": {
            "long_name": "Introduction Summary Questions",
            "required": true,
            "points": 1.0,
            "threshold": 5
          }
        }
      }
    },
    "List Interface & Array Lists": {
      "List/ListADT": {
        "long_name": "List ADT",
        "exercises": {
          "listADTCON1": {
            "long_name": "List ADT Slideshow 1",
            "required": true,
            "points": 0.0,
            "threshold": 1.0
          },
          "listADTCON2": {
            "long_name": "List ADT Slideshow 2",
            "required": true,
            "points": 0.0,
            "threshold": 1.0
          },
          "ListADTPROG": {
            "long_name": "List ADT Exercise",
            "required": true,
            "points": 1.0,
            "threshold": 3
          }
        }
      },
      "List/ListArray": {
        "long_name": "Array-based Lists",
        "exercises": {
          "AlistVarsCON": {
            "long_name": "Array-based List Variables",
            "required": true,
            "points": 0.0,
            "threshold": 1.0
          },
          "AlistIntroCON": {
            "long_name": "Array-based List Intro",
            "required": true,
            "points": 0.0,
            "threshold": 1.0
          },
         "AlistInsertCON": {
            "long_name": "Array-based List Insertion",
            "required": true,
            "points": 0.0,
            "threshold": 1.0
          },
          "AlistAppendCON": {
            "long_name": "Array-based List Append",
            "required": true,
            "points": 0.0,
            "threshold": 1.0
          },
          "AlistRemoveCON": {
            "long_name": "Array-based List Remove",
            "required": true,
            "points": 0.0,
            "threshold": 1.0
          },
          "listArrayInsertion": {
            "long_name": "Array-based List Insert Exercise",
            "required": true,
            "points": 1,
            "threshold": 5
          },
          "listArrayDeletion": {
            "long_name": "Array-based List Delete Exercise",
            "required": true,
            "points": 1,
            "threshold": 5
          },
          "ArryLstSumm": {
            "long_name": "Array-based List Summary",
            "required": true,
            "points": 1,
            "threshold": 3
          }
        }
      }
    },
    "Array-based Stacks": {
      "List/StackArray": {
        "long_name": "Array-based Stacks",
        "exercises": {
          "AStackVarCON": {
            "long_name": "Array stack variables",
            "required": true,
            "points": 0.0,
            "threshold": 1.0
          },
          "AStackTopposCON": {
            "long_name": "Array stack top position",
            "required": true,
            "points": 0.0,
            "threshold": 1.0
          },
          "AStackPushCON": {
            "long_name": "Array stack push",
            "required": true,
            "points": 0.0,
            "threshold": 1.0
          },
          "AStackPopCON": {
            "long_name": "Array stack pop",
            "required": true,
            "points": 0.0,
            "threshold": 1.0
          },
          "listAStackPush": {
            "long_name": "Array Stack Push Exercise",
            "required": true,
            "points": 1,
            "threshold": 5
          },
          "listAStackPop": {
            "long_name": "Array Stack PopExercise",
            "required": true,
            "points": 1,
            "threshold": 5
          }
        }
      }
    },
    "Linked Lists": {
      "List/ListLinked": {
        "long_name": "Linked Lists",
        "exercises": {
          "LlistBadCON": {
            "long_name": "Linked List Slideshow 1",
            "required": true,
            "points": 0.0,
            "threshold": 1.0
          },
          "LlistBadReasonCON": {
            "long_name": "Linked List Slideshow 2",
            "required": true,
            "points": 0.0,
            "threshold": 1.0
          },
          "LlistVarsCON": {
            "long_name": "Linked List Variables",
            "required": true,
            "points": 0.0,
            "threshold": 1.0
          },
          "LListCons": {
            "long_name": "Linked List Constructors",
            "required": true,
            "points": 0.0,
            "threshold": 1.0
          },
          "LlistInsertCON": {
            "long_name": "Linked List Insert",
            "required": true,
            "points": 0.0,
            "threshold": 1.0
          },
          "LlistSpecInsertCON": {
            "long_name": "Linked List Special Insert",
            "required": true,
            "points": 0.0,
            "threshold": 1.0
          },
          "LlistRemoveCON": {
            "long_name": "Linked List Remove",
            "required": true,
            "points": 0.0,
            "threshold": 1.0
          },
          "LlistPosCON": {
            "long_name": "Linked List Position",
            "required": true,
            "points": 0.0,
            "threshold": 1.0
          },
          "listLinkedInsertion": {
            "long_name": "Linked List Insert Exercise",
            "required": true,
            "points": 1,
            "threshold": 5
          },
          "listLinkedDeletion": {
            "long_name": "Linked List Delete Exercise",
            "required": true,
            "points": 2,
            "threshold": 5
          },
          "LstLnkdSumm": {
            "long_name": "Linked List Summary",
            "required": true,
            "points": 2,
            "threshold": 6
          }
        }
      },
      "List/ListAnalysis": {
        "long_name": "Comparison of List Implementations",
        "exercises": {
          "ListOverhead": {
            "long_name": "Breakeven Point Exercise",
            "required": true,
            "points": 1,
            "threshold": 3
          }
  }
      },
      "List/Freelist": {
        "long_name": "Freelists",
        "exercises": {
          "listFreeCON": {
            "long_name": "Freelist Slideshow 1",
            "required": true,
            "points": 0.0,
            "threshold": 1.0
          },
          "FListInsertCON": {
            "long_name": "Freelist Insert",
            "required": true,
            "points": 0.0,
            "threshold": 1.0
          }
        }
      },
      "List/ListDouble": {
        "long_name": "Doubly Linked Lists",
        "exercises": {
          "DLlistInsertCON": {
            "long_name": "Doubly Linked List Insert",
            "required": true,
            "points": 0.0,
            "threshold": 1.0
          },
          "DLlistAppendCON": {
            "long_name": "Doubly Linked List Append",
            "required": true,
            "points": 0.0,
            "threshold": 1.0
          },
          "DLlistRemoveCON": {
            "long_name": "Doubly Linked List Remove",
            "required": true,
            "points": 0.0,
            "threshold": 1.0
          },
          "DLlistRemoveCON": {
            "long_name": "Doubly Linked List Remove",
            "required": true,
            "points": 0.0,
            "threshold": 1.0
          },
          "DLlistPrevCON": {
            "long_name": "Doubly Linked List Prev",
            "required": true,
            "points": 0.0,
            "threshold": 1.0
          }
        }
      }
    },
    "Queues and Linked Stacks": {
      "List/Queue": {
        "long_name": "Queues",
        "exercises": {
          "AQueueFirstNposCON": {
            "long_name": "Array Queue Slideshow 1",
            "required": true,
            "points": 0.0,
            "threshold": 1.0
          },
          "AQueueDriftposCON": {
            "long_name": "Array Queue Drift",
            "required": true,
            "points": 0.0,
            "threshold": 1.0
          },
          "AQueueBadCON": {
            "long_name": "Array Queue Bad",
            "required": true,
            "points": 0.0,
            "threshold": 1.0
          },
          "AQueueCircularCON": {
            "long_name": "Array Queue Circular",
            "required": true,
            "points": 0.0,
            "threshold": 1.0
          },
          "AQueueEmptyFullCON": {
            "long_name": "Array Queue Empty/Full",
            "required": true,
            "points": 0.0,
            "threshold": 1.0
          },
          "AQueueVarCON": {
            "long_name": "Array Queue Variables",
            "required": true,
            "points": 0.0,
            "threshold": 1.0
          },
          "listAQueueEnqueue": {
            "long_name": "Array Queue Enqueue Exercise",
            "required": true,
            "points": 1,
            "threshold": 5
          },
          "listAQueueDequeue": {
            "long_name": "Array Queue Dequeue Exercise",
            "required": true,
            "points": 1,
            "threshold": 5
          },
          "LQueueIntroCON": {
            "long_name": "Linked Queue Intro",
            "required": true,
            "points": 0.0,
            "threshold": 1.0
          },
          "LQueueEnqueueCON": {
            "long_name": "Linked Queue Enqueue",
            "required": true,
            "points": 0.0,
            "threshold": 1.0
          },
          "LQueueDequeueCON": {
            "long_name": "Linked Queue Dequeue",
            "required": true,
            "points": 0.0,
            "threshold": 1.0
          },
          "listLQueueEnqueue": {
            "long_name": "Linked Queue Enqueue Exercise",
            "required": true,
            "points": 1,
            "threshold": 5
          },
          "listLQueueDequeue": {
            "long_name": "Linked Queue Dequeue Exercise",
            "required": true,
            "points": 1,
            "threshold": 5
          },
          "StckQSumm": {
            "long_name": "Stack/Queue Summary Exercise",
            "required": true,
            "points": 1,
            "threshold": 5
          }
        }
      },
      "List/StackLinked": {
        "long_name": "Linked Stacks",
        "exercises": {
          "LStackPushCON": {
            "long_name": "Linked stack push",
            "required": true,
            "points": 0.0,
            "threshold": 1.0
          },
          "LStackPopCON": {
            "long_name": "Linked stack pop",
            "required": true,
            "points": 0.0,
            "threshold": 1.0
          },
          "listLStackPush": {
            "long_name": "Linked Stack Push Exercise",
            "required": true,
            "points": 1,
            "threshold": 5
          },
          "listLStackPop": {
            "long_name": "Linked Stack Pop Exercise",
            "required": true,
            "points": 1,
            "threshold": 5
          }
        }
      }
    },
    "Recursion": {
      "Background/Recursion": {
        "long_name": "Recursion",
        "exercises": {
          "recursionCONTOH": {}
        }
      },
      "List/StackRecur": {
        "long_name": "Implementing Recursion",
        "exercises": {}
      }
    },
    "Binary Trees": {
      "Development/BinaryTreeIntro": {
        "long_name": "Binary Trees Chapter Introduction",
        "exercises": {}
      },
      "Development/BinaryTree": {
        "long_name": "Binary Tree Terminology",
        "exercises": {
          "DprobsAll": {
            "long_name": "Tree Definition Summary",
            "required": true,
            "points": 3,
            "threshold": 8
          }
        }
      },
      "Development/BinaryTreeTraversal": {
        "long_name": "Binary Tree Traversals",
        "exercises": {
    "BTLeafPROG": {
            "long_name": "Node Count Function",
            "required": true,
            "points": 1.0,
            "threshold": 1
          },
          "binarytree-inorder": {
            "long_name": "Binary Tree Inorder Traversal",
            "required": true,
            "points": 1.0,
            "threshold": 0.90
          },
          "binarytree-preorder": {
            "long_name": "Binary Tree Preorder Traversal",
            "required": true,
            "points": 1.0,
            "threshold": 0.90
          },
          "binarytree-postorder": {
            "long_name": "Binary Tree Postorder Traversal",
            "required": true,
            "points": 1.0,
            "threshold": 0.90
          }
        }
      },
      "Development/BinaryTreeImpl": {
        "long_name": "Full Binary Tree Node Implementations",
        "exercises": {}
      },
      "Development/BST": {
        "long_name": "Binary Search Trees",
        "exercises": {
          "searchCON": {
            "long_name": "BST Search Slideshow",
            "required": false,
            "points": 0.0,
            "threshold": 1.0
          },
          "BST-search-proficiency": {
            "long_name": "BST Search Exercise",
            "required": true,
            "points": 1.0,
            "threshold": 0.90
          },
          "insertCON": {
            "long_name": "BST Insert Slideshow",
            "required": false,
            "points": 0.0,
            "threshold": 1.0
          },
          "BST-insert-proficiency": {
            "long_name": "BST Insert Exercise",
            "required": true,
            "points": 1.0,
            "threshold": 0.90
          },
          "deletemaxCON": {
            "long_name": "BST deletemax Slideshow",
            "required": false,
            "points": 0.0,
            "threshold": 1.0
          },
          "removeCON": {
            "long_name": "BST remove Slideshow",
            "required": false,
            "points": 0.0,
            "threshold": 1.0
          },
          "BST-delete-proficiency": {
            "long_name": "BST Delete Exercise",
            "required": true,
            "points": 2.0,
            "threshold": 0.90
          }
        }
      }
    },
    "Sorting": {
      "Sorting/InSort": {
        "long_name": "Chapter Introduction: Sorting",
        "exercises": {}
      },
      "Sorting/SortNotation": {
        "long_name": "Sorting Terminology and Notation",
        "exercises": {
          "SortIntroSumm": {
            "long_name": "Sorting Intro Summary",
            "required": true,
            "points": 1.0,
            "threshold": 3
          }
        }
      },
      "Sorting/InsertionSort": {
        "long_name": "Insertion Sort",
        "exercises" : {
          "InssortCON1": {
            "long_name": "Insertion Sort Slideshow 1",
            "required": false,
            "points": 0.0,
            "threshold": 1.0
          },
          "InssortCON2": {
            "long_name": "Insertion Sort Slideshow 2",
            "required": false,
            "points": 0.0,
            "threshold": 1.0
          },
          "InssortCON3": {
            "long_name": "Insertion Sort Slideshow 3",
            "required": false,
            "points": 0.0,
            "threshold": 1.0
          },
          "InsertionSortAV": {
            "long_name": "Insertion Sort Visualization",
            "required": false,
            "points": 0,
            "showhide": "none",
            "threshold": 1.0
          },
          "InssortPRO": {
            "long_name": "Insertion Sort Proficiency Exercise",
            "required": true,
            "points": 1.0,
            "threshold": 5
          },
          "InssortSumm": {
            "long_name": "Insertion Sort Summary Exercise",
            "required": true,
            "points": 1.0,
            "threshold": 5
          }
        }
      },
      "Sorting/BubbleSort": {
        "long_name": "Bubble Sort",
        "exercises": {
          "BubsortCON1": {
            "long_name": "Bubble Sort Slideshow 1",
            "required": false,
            "points": 0.0,
            "threshold": 1.0
          },
          "BubsortCON2": {
            "long_name": "Bubble Sort Slideshow 2",
            "required": false,
            "points": 0.0,
            "threshold": 1.0
          },
          "bubblesortAV": {
            "long_name": "Bubble Sort Visualization",
            "required": false,
            "points": 0,
            "showhide": "none",
            "threshold": 1.0
          },
          "BubsortPRO": {
            "long_name": "Bubble Sort Proficiency Exercise",
            "required": true,
            "points": 2.0,
            "threshold": 5
          },
          "BubsortSumm": {
            "long_name": "Bubble Sort Summary Exercise",
            "required": true,
            "points": 1.0,
            "threshold": 5
          }
        }
      },
      "Sorting/SelectionSort": {
        "long_name": "Selection Sort",
        "exercises": {
          "SelsortCON1": {
            "long_name": "Selection Sort Slideshow 1",
            "required": false,
            "points": 0.0,
            "threshold": 1.0
          },
          "SelsortCON2": {
            "long_name": "Selection Sort Slideshow 2",
            "required": false,
            "points": 0.0,
            "threshold": 1.0
          },
          "selectionsortAV": {
            "long_name": "Selection Sort Visualization",
            "required": false,
            "points": 0,
            "showhide": "none",
            "threshold": 1.0
          },
          "SelsortPRO": {
            "long_name": "Selection Sort Proficiency Exercise",
            "required": true,
            "points": 2.0,
            "threshold": 5
          },
          "SelsortSumm": {
            "long_name": "Selection Sort Summary Exercise",
            "required": true,
            "points": 1.0,
            "threshold": 5
          }
        }
      }
    },
    "Stubs": {
      "hidden": true,
      "Stubs": {
        "long_name": "Stubs Chapter",
        "exercises": {}
      },
      "Stubs/SetDef": {
        "long_name": "Set Definitions",
        "exercises": {}
      },
      "Stubs/SelfOrg": {
        "long_name": "Self-organizing Lists",
        "exercises": {}
      },
      "Stubs/Kary": {
        "long_name": "K-ary Trees",
        "exercises": {}
      },
      "Stubs/Multilists": {
        "long_name": "Multilists",
        "exercises": {}
      },
      "Stubs/Trie": {
        "long_name": "Tries",
        "exercises": {}
      },
      "Stubs/SparseMatrix": {
        "long_name": "Sparse Matrix",
        "exercises": {}
      },
      "Stubs/Spatial": {
        "long_name": "Spatial Data Structures",
        "exercises": {}
      },
      "Stubs/AdvSumm": {
        "long_name": "Advanced Summations",
        "exercises": {}
      },
      "Stubs/Recurrence": {
        "long_name": "Solving Recurrence Relations",
        "exercises": {}
      },
      "Stubs/AmortAnal": {
        "long_name": "Amortized Analysis",
        "exercises": {}
      },
      "Stubs/Reductions": {
        "long_name": "Reductions",
        "exercises": {}
      },
      "Stubs/Computability": {
        "long_name": "Computability",
        "exercises": {}
      },
      "Stubs/LimComp": {
        "long_name": "Limits to Computing",
        "exercises": {}
      }
    },
    "Searching": {
      "hidden": true,
      "Stubs/SearchIntro": {
        "long_name": "Searching",
        "exercises": {}
      }
    },
    "Appendix": {
      "Glossary": {
        "long_name": "Glossary",
        "exercises": {}
      },
      "Bibliography": {
        "long_name": "Bibliography",
        "exercises": {}
      }
    }
  }
}

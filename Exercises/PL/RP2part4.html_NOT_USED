<!DOCTYPE html>
<html data-require="math">
  <head>
    <title>RP 2.4</title>
    <script src="//cdnjs.cloudflare.com/ajax/libs/require.js/2.1.14/require.min.js"></script>
    <script src="../../khan-exercises/local-only/main.js" ></script>
    <link rel="stylesheet"  href="./styles.css" type="text/css" />
  </head>

  <body data-height="820" data-width="950">
    <div class="exercise">
      <div class="problems">
        <div id="RP2part4p">
          <p class="question">Consider the following grammar:<br />
	    <span class="string">&lt;exp&gt; ::= 0 | 1 | &lt;exp&gt; +
	      &lt;exp&gt; | &lt;exp&gt; - &lt;exp&gt; | &lt;exp&gt; *
	      &lt;exp&gt;</span><br /> Then consider the
	      following expression that belongs to the language
	      generated by this grammar:<br />
	    <span class="string">1 - 1 + 1 - 1 + 1</span><br />
	    When evaluating this expression based on its parse tree, the grammar would allow this expression to evaluate to ...</p>
	  
	  
          <div class="solution">... exactly two different values in the set of values {-2,-1,0,1,2}.</div>
          <ul class="choices">
            <li>... only one value in the set of
            values {-2,-1,0,1,2}.</li>
            <li>... exactly three different values in the set of
            values {-2,-1,0,1,2}.</li>
            <li>... exactly four different values in the set of values
            {-2,-1,0,1,2}.</li>
	    <li>... all five values in the set of values {-2,-1,0,1,2}.</li>
          </ul>
          <div class="hints">
            <p>Under the usual rules of associativity and order of
            precedence for arithmetic operators, the value of this
            expression is 1.</p>
            <p>This grammar does not enforce the usual rules of
            associativity and order of precedence.</p>
	    <p>Each parse tree corresponds to one way of fully
	    parenthesizing the expression.</p>
          </div>
        </div>
      </div>
    </div>
  </body>
</html>

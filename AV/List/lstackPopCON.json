{
  "translations": {
    "en": {
      "sc1": "Method <code>pop</code> is also quite simple.",
      "sc2": "<code>top</code> points to the first node. Since <code>top</code> is not equal to <code>null</code>, we proceed.",
      "sc3": "Variable <code>it</code> stores the top node's value as it is removed from the stack.",
      "sc4": "The stack is updated by setting <code>top</code> to point to the next link in the stack. The old node becomes garbage.",
      "sc5": "Decrease the stack size by 1.",
      "sc6": "The element value is returned."
    }
  },
  "code": {
    "processing": [{
      "url": "../../../SourceCode/Processing/Lists/LStack.pde",
      "lineNumbers": false,
      "startAfter": "/* *** ODSATag: LStackPop *** */",
      "endBefore": "/* *** ODSAendTag: LStackPop *** */",
      "tags": {
        "sig": 1,
        "null": 2,
        "it": 3,
        "top": 4,
        "size": 5,
        "return": 6
      }
    }],
    "java": [{
      "url": "../../../SourceCode/Java/Lists/LStack.java",
      "lineNumbers": false,
      "startAfter": "/* *** ODSATag: LStackPop *** */",
      "endBefore": "/* *** ODSAendTag: LStackPop *** */",
      "tags": {
        "sig": 1,
        "null": 2,
        "it": 3,
        "top": 4,
        "size": 5,
        "return": 6
      }
    }],
    "java_generic": [{
      "url": "../../../SourceCode/Java_Generic/Lists/LStack.java",
      "lineNumbers": false,
      "startAfter": "/* *** ODSATag: LStackPop *** */",
      "endBefore": "/* *** ODSAendTag: LStackPop *** */",
      "tags": {
        "sig": 1,
        "null": 2,
        "it": 3,
        "top": 4,
        "size": 5,
        "return": 6
      }
    }]
  }
}

{
  "translations" :{
    "en": {
      "av_preorder": "Preorder traversal begins on pointer-based binary tree.",
      "av_nullcheck": "Check to see if node is null.",
      "av_isnotnull": "It's not null, so we check to see if the node is a leaf node.",
      "av_isleaf": "It is a leaf node.",
      "av_visitleaf": "It is a leaf node, so we visit the leaf node by using the leaf node class visit method.",
      "av_isnotleaf": "It is not a leaf node.",
      "av_visitinternal": "It is not a leaf node, so we visit the internal node by using the internal node class visit method.",
      "av_traverseleft": "Finished visiting internal node, so we traverse the left child by its internal node pointer to it.",
      "av_traverseright": "Finished visiting left child, so we traverse the right child by its parent's (internal node) pointer to it.",
      "av_done": "Finished the preorder traversal on "
    }
  },
  "code" : {
    "processing": {
      "url": "../../../SourceCode/Processing/Binary/Traverse.pde",
      "lineNumbers": false,
      "startAfter": "/* *** ODSATag: pointer based preorder *** */",
      "endBefore": "/* *** ODSAendTag: pointer based preorder *** */",
      "tags": {
         "sig": 1,
         "checknull": 2,
         "isleaf": 3,
         "visitleaf": 4,
         "isnotleaf": 5,
         "visitinternal": 6,
         "traverseleft": 7,
         "traverseright": 8,
         "endnotleaf": 9,
         "end": 10
      }
    }
  }
}

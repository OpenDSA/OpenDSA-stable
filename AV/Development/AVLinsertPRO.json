{
  "translations" :{
    "en": {
      ".exerciseTitle": "AVL Tree Insertion",
      "av_Authors": "Kasper Hellstr√∂m",
      ".instructLabel": "Instructions:",
      ".instructions": "Insert the values in the stack into the tree. Balance the tree at the correct node with the correct rotation when it becomes unbalanced."
    }
  },
  "code": {
    "english": [
      "1 Do Binary Search Tree Insert (recursive algorithm)",
      "2 While the recursion returns, keep track of",
      "    node p,",
      "    p's child q and",
      "    p's grandchild r within the path from inserted node to p.",
      "3 If p is unbalanced, do one of the following rotations:",
      "    if (p.left == q) and (p.left.left == r), single rotation right in p;",
      "    if (p.right == q) and (p.right.right == r), single rotation left in p;",
      "    if (p.left == q) and (p.left.right == r), LR-double rotation in p; or",
      "    if (p.right == q) and (p.right.left == r), RL-double rotation in p."
    ]
  }
}

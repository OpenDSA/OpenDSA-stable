{
  "translations": {
    "en": {
      ".exerciseTitle": "Running Time of Iterative Algorithms",
      ".instructLabel": "Instructions:",
      ".instructions": "Analyse the worst case running time of the following program fragments. Select the most tight upper bound for n. Rank the program fragments by order of growth, from the lowest rate of growth to the highest rate of growth. Note that if the functions are used to measure running time, then low rates of growth correspond to faster running times for large N, so that f<sub>1</sub>(N) &lt; f<sub>2</sub>(N) &lt; ... &lt; f<sub>10</sub>(N)."
    },
    "fi": {
      ".exerciseTitle": "Iteratiivisen koodin aikakompleksisuus",
      ".instructLabel": "Ohjeet:",
      ".instructions": "Analysoi seuraavien ohjelmanpätkien pahimman tapauksen aikavaatimus iso O -notaatiossa ja valitse tiukin yläraja, kun syötteen koko on n. Laita ohjelmanpätkät niiden kasvunopeuden mukaiseen järjestykseen hitaimmasta nopeimpaan. Huomaa, että jos funktiot kuvaisivat algoritmien suoritusaikaa, niin hitaimman kasvunopeuden omaava funktio vastaa nopeinta suoritusaikaa siten, että suurilla N:n arvoilla f<sub>1</sub>(N) &lt; f<sub>2</sub>(N) &lt; ... &lt; f<sub>10</sub>(N)."
    }
  },
  "code": {
    "all": [
      "<span style='font-family: monospace'>sum = 0<br>for i=1…1000000 do<br>&nbsp;&nbsp;&nbsp;&nbsp;for j=1…i*i do<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for k=1…j*j*j do<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sum = sum + 1</span>",
      "<span style='font-family: monospace'>sum = 0<br>for i=1…log(n) do<br>&nbsp;&nbsp;&nbsp;&nbsp;for j=1…i do<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for k=1…log(i) do<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sum = sum + 1</span>",
      "<span style='font-family: monospace'>sum=0<br>for i=1…n<br>&nbsp;&nbsp;&nbsp;&nbsp;sum = sum + 1</span>",
      "<span style='font-family: monospace'>a[0] = INT_MIN<br>for i=2…n<br>&nbsp;&nbsp;&nbsp;&nbsp;tmp = a[i]<br>&nbsp;&nbsp;&nbsp;&nbsp;j = i<br>&nbsp;&nbsp;&nbsp;&nbsp;while (a[j-1] > tmp) do<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a[j] = a[j-1]<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;j = j - 1<br>&nbsp;&nbsp;&nbsp;&nbsp;a[j] = tmp</span>",
      "<span style='font-family: monospace'>sum = 0<br>for i=1…n do<br>&nbsp;&nbsp;&nbsp;&nbsp;for j=1…i/2 do<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for k=1…log(j) do<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sum = sum + 1</span>",
      "<span style='font-family: monospace'>sum = 0<br>for i=1…n do<br>&nbsp;&nbsp;&nbsp;&nbsp;for j=1…n do<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for k=1…n do<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sum = sum + 1</span>",
      "<span style='font-family: monospace'>sum = 0<br>for i=n…n*n do<br>&nbsp;&nbsp;&nbsp;&nbsp;for j=1…i do<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (odd(i)) then<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for k=1…j do<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sum = sum + 1</span>"

    ]
  }
}

{
  "translations" :{
    "en": {
	  "Slide 1": "We first examine the worst case cost.",
	  "Slide 2": "The body of inssort contains of two nested for loops",
	  "Slide 3": "The outer for loop is executed $n-1$ times",
	  "Slide 4": "The inner loop is harder to analyze since it depends on how many records in positions $0$ to $i-1$ have a value less than that of the record in position $i$",
	  "Slide 5": "Let's consider now a worst case example of an array with 6 elements",
	  "Slide 6": "At $i=1$ a single comparison is required",
	  "Slide 7": "At $i=2$ two comparisons are required",
	  "Slide 9": "At $i=3$ three comparisons are required",
	  "Slide 12": "At $i=4$ four comparisons are required",
      "Slide 16": "At $i=5$ five comparisons are required",
      "Slide 21": "The total running time now will be the total surface area of this shape",
      "Slide 22_1": "The total area will be the sum of the areas of the big traingle and the series of (n-1) small traingles",
      "Slide 22_2": "So, the total area is $\\frac{(n-1)(n-1)}{2} + \\frac{(n-1)}{2}$ which gives $\\frac{n(n-1)}{2}$",
      "Slide 23": "And therefore, the worst case running time of insertion sort is $\\theta(n^2)$"	  
	}
  },
  "code" : {
    "processing": {
      "url": "../../../SourceCode/Processing/Sorting/Insertionsort.pde",
      "lineNumbers": false,
      "startAfter": "/* *** ODSATag: Insertionsort *** */",
      "endBefore": "/* *** ODSAendTag: Insertionsort *** */",
      "tags": {
        "loops": [2, 3],
        "loop1": 2,
        "loop2": 3
      }
    }
  }
}
